---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: serverperfomance

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverperformance-nodejs
  labels:
    app: serverperformance-nodejs
spec:
  replicas: 2  # Increased for better availability
  selector:
    matchLabels:
      app: serverperformance-nodejs
  template:
    metadata:
      labels:
        app: serverperformance-nodejs
    spec:
      containers:
        - name: serverperformance-nodejs
          image: jsrankit/serverperformance-nodejs:latest
          ports:
            - containerPort: 3000
              name: http
          # Health checks for better reliability
          livenessProbe:
            httpGet:
              path: /health  # Adjust if your app has a different health endpoint
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health  # Adjust if your app has a different health endpoint
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          # Resource limits for better cluster management
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          # Environment variables (add as needed)
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: serverperformance-nodejs-service
  labels:
    app: serverperformance-nodejs
spec:
  selector:
    app: serverperformance-nodejs
  ports:
    - name: http
      protocol: TCP
      port: 80          # Standard HTTP port for internal traffic
      targetPort: 3000  # Port your app listens on
  type: ClusterIP

---
# Ingress with SSL Passthrough
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: serverperformance-nodejs-ingress
  annotations:
    # Nginx Ingress Controller specific annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    # Force SSL redirect
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # Optional: Add HSTS header for security
    nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
    # Optional: Set proxy timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
spec:
  tls:
    - hosts:
        - performance.endusercompute.in
      secretName: performance-tls-secret
  rules:
    - host: performance.endusercompute.in
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: serverperformance-nodejs-service
                port:
                  number: 80
